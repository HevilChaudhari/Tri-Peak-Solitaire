using System.Collections;
using UnityEngine;

public class Card : MonoBehaviour
{

    [SerializeField] private BoxTest boxTest;
    //----------------------------------------------------------------------------------------------------------------------------------------------------------------//
    //----------------------------------------------------------------------------------------------------------------------------------------------------------------//

    private SpriteRenderer render;

    //----------------------------------------------------------------------------------------------------------------------------------------------------------------//
    //----------------------------------------------------------------------------------------------------------------------------------------------------------------//

    [SerializeField]private Sprite[] faces;
    [SerializeField] private Sprite backSprite;

    //----------------------------------------------------------------------------------------------------------------------------------------------------------------//
    //----------------------------------------------------------------------------------------------------------------------------------------------------------------//

    public int index;
    public int card_id;

    //----------------------------------------------------------------------------------------------------------------------------------------------------------------//
    //----------------------------------------------------------------------------------------------------------------------------------------------------------------//

    private bool faceup = false;
    public bool interectable = true;

    //----------------------------------------------------------------------------------------------------------------------------------------------------------------//
    //----------------------------------------------------------------------------------------------------------------------------------------------------------------//

    public Vector3 spawnPos;

    private void Awake()
    {
        render = GetComponent<SpriteRenderer>();
    }

    //----------------------------------------------------------------------------------------------------------------------------------------------------------------//
    //----------------------------------------------------------------------------------------------------------------------------------------------------------------//

    private void OnEnable()
    {
        GameManager.OnGameStateChanged += FlipCard;
        GameManager.OnCardMovetoWasteDeck += CanInterectable;
    }

    //----------------------------------------------------------------------------------------------------------------------------------------------------------------//
    //----------------------------------------------------------------------------------------------------------------------------------------------------------------//

    private void FlipCard(GameState state)
    {

        if(state == GameState.Playing)
        {
            CanInterectable();
        }
    }

   
    //----------------------------------------------------------------------------------------------------------------------------------------------------------------//
    //----------------------------------------------------------------------------------------------------------------------------------------------------------------//
    // Start is called before the first frame update
    void Start()
    {
        card_id = (index+1) % 13;

    }

    //----------------------------------------------------------------------------------------------------------------------------------------------------------------//
    //----------------------------------------------------------------------------------------------------------------------------------------------------------------//

    private IEnumerator FlipCard()
    {

        if (!faceup)
        {
            for(float i = 180f;i>=0; i-= 10)
            {
                transform.rotation = Quaternion.Euler(0f, i, 0f);
                //---------------------------------------------------------
                if (i == 90)
                {
                    render.sprite = faces[index];
                }
                //---------------------------------------------------------
                yield return new WaitForSeconds(0.01f);

            }
        }

    }

    //----------------------------------------------------------------------------------------------------------------------------------------------------------------//
    //----------------------------------------------------------------------------------------------------------------------------------------------------------------//

    public IEnumerator FlipCard360(int maxflip)
    {


        for (float i = maxflip; i >= 0; i -= 10)
        {
            transform.rotation = Quaternion.Euler(0f, i, 0f);
            //---------------------------------------------------------
            if (i == 270)
            {
                render.sprite = backSprite;
            }
            else if (i == 90)
            {
                render.sprite = faces[index];
            }
            //---------------------------------------------------------
            yield return new WaitForSeconds(0.0009f);


        }

    }

    //----------------------------------------------------------------------------------------------------------------------------------------------------------------//
    //----------------------------------------------------------------------------------------------------------------------------------------------------------------//

    private void CanInterectable()
    {
        if (gameObject.layer == LayerMask.NameToLayer("Card"))
        {

            bool canInterectable = boxTest.CheckCardOverlap();
            //---------------------------------------------------------

            if (canInterectable)
            {

                _=StartCoroutine(FlipCard());
                gameObject.layer = LayerMask.NameToLayer("InterectableCard");
            }

            //---------------------------------------------------------
        }
    }

    //----------------------------------------------------------------------------------------------------------------------------------------------------------------//
    //----------------------------------------------------------------------------------------------------------------------------------------------------------------//

    public void SpawnOndeck(int newindex)
    {
        index = newindex;
        card_id = (index + 1) % 13;
        render.sprite = faces[index];
        gameObject.layer = LayerMask.NameToLayer("WasteCards");
    }

    //----------------------------------------------------------------------------------------------------------------------------------------------------------------//
    //----------------------------------------------------------------------------------------------------------------------------------------------------------------//

    private void OnDisable()
    {
        GameManager.OnGameStateChanged -= FlipCard;
        GameManager.OnCardMovetoWasteDeck -= CanInterectable;
    }

    //----------------------------------------------------------------------------------------------------------------------------------------------------------------//
    //----------------------------------------------------------------------------------------------------------------------------------------------------------------//
    
}
